<?php

namespace AppBundle\Repository;

/**
 * HistoricalAlertSubscriberRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HistoricalAlertSubscriberRepository extends \Doctrine\ORM\EntityRepository
{
    public function deleteHistoricalAlertSubscriber(\AppBundle\Entity\HistoricalAlertSubscriber $historicalAlertSubscriber) {
        $em= $this->_em;
        $historicalAlertSubscriber->setStatut(0);
        $em->getConnection()->beginTransaction();
        try{
            $em->persist($historicalAlertSubscriber);
            $em->flush();
            $em->getConnection()->commit();
        } catch (Exception $ex) {
            $em->getConnection()->rollback();
            $em->close();
            throw $ex;
        }
    }


    public function saveHistoricalAlertSubscriber(\AppBundle\Entity\HistoricalAlertSubscriber $historicalAlertSubscriber) {
        $em= $this->_em;
        $historicalAlertSubscriber->setStatut(1);
        $em->getConnection()->beginTransaction();
        try{
            $em->persist($historicalAlertSubscriber);
            $em->flush();
            $em->getConnection()->commit();
        } catch (Exception $ex) {
            $em->getConnection()->rollback();
            $em->close();
            throw $ex;
        }
    }

    public function updateHistoricalAlertSubscriber(\AppBundle\Entity\HistoricalAlertSubscriber $historicalAlertSubscriber) {
        $em= $this->_em;
        $em->getConnection()->beginTransaction();
        try{
            $em->persist($historicalAlertSubscriber);
            $em->flush();
            $em->getConnection()->commit();
        } catch (Exception $ex) {
            $em->getConnection()->rollback();
            $em->close();
            throw $ex;
        }
    }
    public function getAll() 
    {
        $qb = $this->createQueryBuilder('c');
        $qb->where('c.status = :status')
           ->setParameter('status', 1);
        return $qb->getQuery()->getResult();
    }
    
    public function getHistoricalAlertSubscriberQueryBuilder() {
         return $this
          ->createQueryBuilder('c')
          ->where('c.status = :status')
          ->setParameter('status', 1);

    }
}
